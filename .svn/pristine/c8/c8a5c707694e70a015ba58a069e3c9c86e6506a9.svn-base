#include <iostream>
#include <GL/glut.h>
#include <SDL.h>

SDL_Window* window;
SDL_GLContext context;

void initialize() {
	SDL_GL_SetAttribute(SDL_GL_CONTEXT_MAJOR_VERSION, 2);
	SDL_GL_SetAttribute(SDL_GL_CONTEXT_MINOR_VERSION, 1);

	context =SDL_GL_CreateContext(window);
	SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1);
	SDL_GL_SetAttribute(SDL_GL_DEPTH_SIZE, 16);

	window = SDL_CreateWindow("Desolation RPG", SDL_WINDOWPOS_CENTERED,
		SDL_WINDOWPOS_CENTERED, 640, 480,
		SDL_WINDOW_OPENGL | SDL_WINDOW_SHOWN);

	context = SDL_GL_CreateContext(window);

	glEnable(GL_DEPTH_TEST);
	glDepthFunc(GL_LESS);

	glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
	glClearDepth(1.0f);
}

void uninitialize() {
	SDL_GL_DeleteContext(context);
	SDL_DestroyWindow(window);
	SDL_Quit();
}

int main(int argc, char** argv) {
	initialize();
	unsigned int start = 0;
	while(start < 1000) {
		//Input
		//Logic
		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
		//Draw
		SDL_GL_SwapWindow(window);

		if((unsigned int)60 * (SDL_GetTicks() - start) < 1000) {
			SDL_Delay((1000 / 60) - (SDL_GetTicks() - start));
		}

		start = SDL_GetTicks();
		SDL_Delay(1);
	}
	uninitialize();
	return 0;
}
